{"ast":null,"code":"var _jsxFileName = \"/home/anubhav/Documents/face-recognition-project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'tachyons';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\nconst particlesProperties = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 100\n    },\n    \"size\": {\n      \"value\": 3\n    }\n  },\n  \"interactivity\": {\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"repulse\"\n      }\n    }\n  }\n};\nconst app = new Clarifai.App({\n  apiKey: '53641c20a69a4f93b377e6d9c3a534c8'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifyFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifyFace.left_col * width,\n        topRow: clarifyFace.top_row * height,\n        rightCol: width - clarifyFace.right_col * width,\n        bottomRow: height - clarifyFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'SignIn' || route === 'register') this.setState({\n        isSignedIn: false\n      });else if (route === 'home') this.setState({\n        isSignedIn: true\n      });\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'SignIn',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageURL = _this$state.imageURL,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesProperties,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), this.state.route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageURL: imageURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })) : route === 'SignIn' ? React.createElement(SignIn, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/anubhav/Documents/face-recognition-project/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","SignIn","Register","particlesProperties","app","App","apiKey","constructor","loadUser","data","setState","id","name","email","entries","joined","calculateFaceLocation","clarifyFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","onInputChange","event","input","target","value","onButtonSubmit","imageURL","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","user","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nimport 'tachyons';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register';\n\n\nconst particlesProperties = {\n\"particles\": {\n    \"number\": {\n        \"value\": 100\n    },\n    \"size\": {\n        \"value\": 3\n    }\n},\n\"interactivity\": {\n    \"events\": {\n        \"onhover\": {\n            \"enable\": true,\n            \"mode\": \"repulse\"\n        }\n    }\n}\n};\n\n\nconst app = new Clarifai.App({\n apiKey: '53641c20a69a4f93b377e6d9c3a534c8'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {}, \n      route: 'SignIn',\n      isSignedIn: false, \n      user: {\n        id: '', \n        name: '', \n        email: '',  \n        entries: 0, \n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      id: data.id, \n      name: data.name, \n      email: data.email,  \n      entries: data.entries, \n      joined: data.joined\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifyFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifyFace.left_col * width, \n      topRow: clarifyFace.top_row * height, \n      rightCol: width - (clarifyFace.right_col * width), \n      bottomRow: height - (clarifyFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageURL: this.state.input});\n    app.models.predict(\n        Clarifai.FACE_DETECT_MODEL, \n        this.state.input)\n      .then( response => {\n        if(response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put', \n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'SignIn' || route === 'register')\n      this.setState({isSignedIn: false});\n    else if (route === 'home')\n      this.setState({isSignedIn: true});\n    this.setState({ route: route });\n  }\n\n  render() {\n    const { isSignedIn, imageURL, route, box } = this.state;\n    return(\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesProperties} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'home' \n          ? <div>\n              <Logo />\n              <Rank />\n              <ImageLinkForm \n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n               />\n              <FaceRecognition box={box} imageURL={imageURL}/>\n            </div>\n          : (\n               route === 'SignIn'\n              ? <SignIn onRouteChange={this.onRouteChange}/>\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n          }\n      </div>\n      );\n    }\n  };\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}